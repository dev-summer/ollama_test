name: Code Review
on: pull_request
permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get PR Diff
        id: get_diff
        shell: bash
        env:
          PULL_REQUEST_HEAD_REF: "${{ github.event.pull_request.head.ref }}"
        run: |
          base_ref="${{ github.event.pull_request.base.ref }}"
          head_ref="${{ github.event.pull_request.head.ref }}"
          git fetch origin "refs/heads/$base_ref:refs/remotes/origin/$base_ref"
          git fetch origin "refs/heads/$head_ref:refs/remotes/origin/$head_ref"
          git diff "origin/$base_ref...origin/$head_ref" > "diff.txt"
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          cat "diff.txt" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Load Review Prompt
        id: load_prompt
        run: |
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          cat review_prompt.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install transformers torch requests

      - name: Run Code Review with Hugging Face Model
        id: review_code
        run: |
          python3 << 'EOL'
          from transformers import pipeline
          import os
          
          # Get the prompt from environment variable
          prompt = os.getenv('PROMPT_CONTENT')
          
          # Get the diff from environment variable
          diff = os.getenv('DIFF_CONTENT')
          
          # Initialize model
          review_model = pipeline("text-generation", model="Qwen/Qwen2.5-Coder-1.5B-Instruct", return_full_text=False)
          
          # Generate review
          full_prompt = f"{prompt}\n```\n{diff}\n```"
          review_comment = review_model(
              full_prompt,
              max_new_tokens=512,
              num_return_sequences=1,
              temperature=0.7
          )[0]['generated_text']
          
          # Save review
          with open("review_comment.txt", "w") as file:
              file.write(review_comment)
          EOL
        env:
          PROMPT_CONTENT: ${{ steps.load_prompt.outputs.prompt }}
          DIFF_CONTENT: ${{ steps.get_diff.outputs.diff }}

      - name: Add comment to Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('review_comment.txt', 'utf-8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            })
