name: Code Review
on: pull_request
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  code-review:
    runs-on: self-hosted
    env:
      TRANSFORMERS_CACHE: /Users/lee.jiyoung/.cache/huggingface
      VIRTUAL_ENV: /Users/lee.jiyoung/actions-runner/.venv
      PATH: /opt/homebrew/bin:/Users/lee.jiyoung/actions-runner/.venv/bin:/usr/bin:/bin:/usr/sbin:/sbin
    steps:
      - uses: actions/checkout@v4
      
      - name: Get PR Diff
        id: get_diff
        run: |
          PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          DIFF=$(gh pr diff $PR_NUMBER)
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Load Review Prompt
        id: load_prompt
        run: |
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          cat ui_review.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Code Review with Hugging Face Model
        id: review_code
        run: |
          python3 << 'EOL'
          from transformers import pipeline
          import os
          import torch
          
          # Get the prompt from environment variable
          prompt = os.getenv('PROMPT_CONTENT')
          
          # Get the diff from environment variable
          diff = os.getenv('DIFF_CONTENT')
          
          # Initialize model
          review_model = pipeline("text-generation", model="Qwen/Qwen2.5-Coder-7B-Instruct", return_full_text=False)
          
          # Generate review
          full_prompt = f"{prompt}\n```\n{diff}\n```"
          review_comment = review_model(
              full_prompt,
              max_new_tokens=3000,
              num_return_sequences=1,
              temperature=0.7
          )[0]['generated_text']
          
          # Save review
          with open("review_comment.md", "w") as file:
              file.write(review_comment)
          EOL
        env:
          PROMPT_CONTENT: ${{ steps.load_prompt.outputs.prompt }}
          DIFF_CONTENT: ${{ steps.get_diff.outputs.diff }}

      - name: Add comment to Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('review_comment.txt', 'utf-8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            })
